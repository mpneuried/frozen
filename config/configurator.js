// Generated by CoffeeScript 1.3.3
(function() {
  var Configurator, fs, path,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  fs = require("fs");

  path = require("path");

  module.exports = new (Configurator = (function() {

    function Configurator() {
      this.get = __bind(this.get, this);

      this.load = __bind(this.load, this);

    }

    Configurator.prototype.CNF = require("./config_default");

    Configurator.prototype.load = function(file) {
      var data, _data, _e, _p;
      if (file == null) {
        file = "../config.json";
      }
      _p = path.resolve(__dirname + file);
      data = null;
      try {
        data = fs.readFileSync("" + _p, "utf8");
      } catch (_error) {}
      if (!data) {
        console.log("\n\nWARNING:\nNo config file found ( " + _p + " ). System will run with defaults.\n\n");
        return this.CNF;
      }
      _data = null;
      try {
        _data = JSON.parse(data);
      } catch (_error) {}
      if (!_data) {
        _e = new Error();
        _e.name = "Config parse";
        _e.message = "Configfile `config.json` is not a valid JSON file";
        throw _e;
      }
      _utils.extend(true, this.CNF, _data);
      return this.CNF;
    };

    Configurator.prototype.get = function() {
      return this.CNF;
    };

    return Configurator;

  })());

}).call(this);
